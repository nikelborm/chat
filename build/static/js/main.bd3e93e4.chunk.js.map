{"version":3,"sources":["components/Participant.js","components/ParticipantsList.js","components/getCookie.js","components/MyAccountInfo.js","components/ConversationList.js","components/Message.js","components/MessagesList.js","components/ChatArea.js","components/TabsContainer.js","components/RightTabs.js","components/WindowArea.js","components/WindowTitle.js","components/App.js","index.js"],"names":["Participant","props","data","userName","fullName","href","className","title","ParticipantsList","usersList","map","item","key","id","length","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","MyAccountInfo","state","imgIsLoading","imgLink","componentDidMount","fetch","then","response","json","setState","results","picture","large","statusText","src","this","alt","style","overflow","Component","ConversationList","Message","author","text","time","myName","MessagesList","chatList","createRef","down","current","scrollTo","offsetTop","info","msgList","isLoading","ref","overflowX","overflowY","_id","ChatArea","sendMsgInChat","e","preventDefault","room","message","inputArea","value","location","origin","method","body","JSON","stringify","headers","Headers","console","log","React","type","defaultValue","onClick","TabsContainer","RightTabs","WindowArea","ischatHistoryLoaded","isUsersListInRoomDownloaded","loader","path","pasteReplyIn","pasteSuccessIn","reply","report","isError","componentDidUpdate","cometCreated","socket","WebSocket","host","onopen","onmessage","event","parse","handlerType","concat","onclose","onerror","error","createCometConnection","wasClean","code","reason","WindowTitle","App","render","getElementById"],"mappings":"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","file":"static/js/main.bd3e93e4.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nfunction Participant(props) {\r\n    const { userName, fullName/* , onlineStatus */ } = props.data;\r\n    return (<li>\r\n        <a href=\"#\">\r\n            {/* <i className={\"fa fa-circle-o \" + onlineStatus}></i> */}\r\n            <i className=\"fa fa-circle-o online\" title={userName}></i>\r\n            <span>{fullName}</span>\r\n            <i className=\"fa fa-times\"></i>\r\n        </a>\r\n    </li>);\r\n}\r\nexport default Participant;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport Participant from './Participant';\r\nfunction ParticipantsList(props) {\r\n    const { usersList } = props;\r\n    return (\r\n        <ul>\r\n            <li className=\"item\"><a href=\"#\"><i className=\"fa fa-list-alt\"></i><span>Участники</span></a></li>\r\n            <li className=\"item active\"><a href=\"#\"><i className=\"fa fa-user\"></i><span>Команда чата</span><i className=\"fa fa-times\"></i></a></li>\r\n            <ul>\r\n                {usersList && usersList.map((item) => <Participant key={item.id} data={item} />)}\r\n            </ul>\r\n            {!usersList.length && <strong>Загружается список участников комнаты...</strong>}\r\n        </ul>\r\n    );\r\n}\r\nexport default ParticipantsList;\r\n","/* eslint-disable no-useless-escape */\r\n// возвращает куки с указанным name,\r\n// или undefined, если ничего не найдено\r\nfunction getCookie(name) {\r\n    let matches = document.cookie.match(new RegExp(\"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"));\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\nexport default getCookie;","/* eslint-disable no-useless-concat */\r\nimport React, { Component } from 'react';\r\nimport getCookie from './getCookie';\r\nclass MyAccountInfo extends Component {\r\n    state = {\r\n        imgIsLoading: true,\r\n        imgLink: \"\"\r\n    }\r\n    componentDidMount = () => {\r\n        fetch('https://randomuser.me/api/?results=1&inc=picture&noinfo')\r\n            .then(function (response) {\r\n                return response.json()\r\n            }).then((data) => {\r\n                this.setState({\r\n                    imgLink: data.results[0].picture.large,\r\n                    imgIsLoading: false\r\n                })\r\n            });\r\n    };\r\n    render() {\r\n        const userName = getCookie(\"userName\");\r\n        const fullName = getCookie(\"fullName\");\r\n        const statusText = getCookie(\"statusText\");\r\n        return (\r\n            <div className=\"my-account\">\r\n                <div className=\"image\">\r\n                    <img src={this.state.imgIsLoading ? \"chat/white.jpg\" : this.state.imgLink} title=\"Аватар выбирается случайно\" alt=\"User\"/>\r\n                    <i className={\"fa fa-circle \" + \"online\"}></i>\r\n                    {/* TODO: Сделать чтобы можно выбрать свой онлайн и он ставился после задержки: offline, online, idle */}\r\n                </div>\r\n                <div className=\"name\">\r\n                    <span id=\"myName\" style={{overflow:\"hidden\"}} title={userName}>\r\n                    {fullName}\r\n                    </span>\r\n                    <i className=\"fa fa-angle-down\"></i>\r\n                    <span className=\"availability\">{statusText}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default MyAccountInfo;\r\n","import React from 'react';\r\nimport ParticipantsList from './ParticipantsList';\r\nimport MyAccountInfo from './MyAccountInfo';\r\nfunction ConversationList(props) {\r\n    const { usersList } = props;\r\n    return (\r\n        <div className=\"conversation-list\">\r\n            <ParticipantsList usersList={usersList} />\r\n            <MyAccountInfo />\r\n        </div>\r\n    );\r\n}\r\nexport default ConversationList;\r\n","import React from 'react';\r\nimport getCookie from './getCookie';\r\nfunction Message(props) {\r\n    const { author, text, time } = props.data;\r\n    const myName = getCookie(\"userName\");\r\n    return (\r\n        <li className={(author === myName) ? 'me' : ''}>\r\n            <div className=\"name\">\r\n                <span className=\"\">\r\n                    {author}\r\n                </span>\r\n            </div>\r\n            <div className=\"message\">\r\n                <p>\r\n                    {text.replace(/@(\\w{1,50})/g, '<a href=\"domain.com/$1\">$&</a>').replace(/#[\\wА-Яа-яЁё]{1,50}/g, '<a href=\"#\" class=\"hashtag\">$&</a>')}\r\n                    {/* TODO: Заставить эту хрень работать как положено */}\r\n                </p>\r\n                <span className=\"msg-time\">\r\n                    {/* TODO: организовать работу со временем */}\r\n                    {time}\r\n                </span>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\nexport default Message;\r\n","import React, { Component, createRef } from 'react';\nimport Message from './Message';\nclass MessagesList extends Component {\n    constructor(props) {\n        super(props);\n        this.chatList = createRef();\n        this.down = createRef();\n    }\n    componentDidUpdate() {\n        this.chatList.current.scrollTo(0, this.down.current.offsetTop);\n    }\n    render() {\n        const { msgList, isLoading } = this.props;\n        let info;\n        if (isLoading) {\n            info = (<strong>Сообщения загружаются, пожалуйста подождите</strong>)\n        } else if ( !msgList.length ){\n            info = (<strong>Сообщений пока нет, но вы можете это исправить!</strong>)\n        }\n        return (\n            <div className=\"chat-list\" ref={this.chatList} style={{overflowX: \"hidden\", overflowY: \"scroll\"}}>\n                <ul>\n                    {msgList.map((item) => <Message key={item._id} data={item} />)}\n                </ul>\n                {info}\n                <span ref={this.down}></span>\n            </div>\n        );\n    }\n}\nexport default MessagesList;\n","import React, { Component } from 'react';\nimport MessagesList from \"./MessagesList\";\nclass ChatArea extends Component {\n    constructor(props) {\n        super(props);\n        this.inputArea = React.createRef();\n    }\n    sendMsgInChat = (e) => {\n        e.preventDefault();\n        const data = {\n            room: \"global\",\n            message: this.inputArea.current.value\n        };\n        fetch(document.location.origin + '/sendMsgInChat', {\n            method: 'post',\n            body: JSON.stringify(data),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        }).then((response) => {\n            return response.json();\n        }).then((data) => {\n            console.log(data);\n        });\n    };\n    render() {\n        const { msgList, isLoading } = this.props;\n        return (\n            <div className=\"chat-area\">\n                <div className=\"title\">\n                    <b> Переписка </b>\n                    <i className=\"fa fa-search\"></i>\n                </div>\n                <MessagesList msgList={msgList} isLoading={isLoading} />\n                <form className=\"input-area\">\n                    <div className=\"input-wrapper\">\n                        <input type=\"text\" defaultValue=\"\" ref={this.inputArea}/>\n                        <i className=\"fa fa-smile-o\"></i>\n                        <i className=\"fa fa-paperclip\"></i>\n                    </div>\n                    <button onClick={this.sendMsgInChat} className=\"send-btn\">{\">\"}</button>\n                </form>\n            </div>\n        );\n    }\n}\nexport default ChatArea;\n","import React from 'react';\r\nfunction TabsContainer() {\r\n    // TODO: добавить подгрузку онлайновых и работу с вкладками\r\n    return (\r\n        <ul className=\"tabs-container\">\r\n            <li className=\"active\">\r\n                <ul className=\"member-list\">\r\n                    <li><span className=\"status online\"><i className=\"fa fa-circle-o\"></i></span><span>Kristi Galeeva</span></li>\r\n                    <li><span className=\"status online\"><i className=\"fa fa-circle-o\"></i></span><span>Segey Bondar</span></li>\r\n                    <li><span className=\"status idle\"><i className=\"fa fa-circle-o\"></i></span><span>Gleb Kavrasky</span><span className=\"time\">10:45 pm</span></li>\r\n                    <li><span className=\"status offline\"><i className=\"fa fa-circle-o\"></i></span><span>David Barto</span></li>\r\n                </ul>\r\n            </li>\r\n            <li></li>\r\n            <li></li>\r\n        </ul>\r\n    );\r\n\r\n}\r\nexport default TabsContainer;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport TabsContainer from \"./TabsContainer\";\r\n// TODO: Сделать нормальные рабочие вкладки и пункты меню\r\nfunction RightTabs() {\r\n    return (\r\n        <div className=\"right-tabs\">\r\n            <ul className=\"tabs\">\r\n                <li className=\"active\">\r\n                    <a href=\"#\"><i className=\"fa fa-users\"></i></a>\r\n                </li>\r\n                <li><a href=\"#\"><i className=\"fa fa-paperclip\"></i></a></li>\r\n                <li><a href=\"#\"><i className=\"fa fa-link\"></i></a></li>\r\n            </ul>\r\n            <TabsContainer />\r\n            <i className=\"fa fa-cog\"></i>\r\n        </div>\r\n    );\r\n}\r\nexport default RightTabs;\r\n","import React, { Component } from 'react';\nimport ConversationList from \"./ConversationList\";\nimport ChatArea from \"./ChatArea\";\nimport RightTabs from \"./RightTabs\";\nclass WindowArea extends Component {\n    constructor(props) {\n        super(props);\n        this.cometCreated = false;\n    }\n    state = {\n        msgList: [],\n        usersList: [],\n        ischatHistoryLoaded: false,\n        isUsersListInRoomDownloaded: false\n    };\n    componentDidMount = () => {\n        this.loader(\"/loadChatHistory\", \"msgList\", \"ischatHistoryLoaded\");\n        this.loader(\"/loadListOfUsersInChat\", \"usersList\", \"isUsersListInRoomDownloaded\");\n    };\n    loader = (path, pasteReplyIn, pasteSuccessIn) => {\n        fetch(document.location.origin + path, {\n            method: 'post',\n            body: JSON.stringify({ room: \"global\" }),\n            headers: new Headers({\n                'Content-Type': 'application/json'\n            })\n        }).then((response) => {\n            return response.json()\n        }).then((data) => {\n            console.log(data)\n            const {reply, report} = data;\n            if (!report.isError) {\n                this.setState({\n                    [pasteReplyIn]: reply,\n                    [pasteSuccessIn]: true\n                });\n            }\n        });\n    };\n    componentDidUpdate = () => {\n        if (this.state.ischatHistoryLoaded && this.state.isUsersListInRoomDownloaded && !this.cometCreated) {\n            let socket = new WebSocket(\"ws://\"+document.location.host);\n            socket.onopen = function (e) {\n                console.info(\"[open] Соединение установлено\");\n            };\n            socket.onmessage = (event) => {\n                console.info(\"[message] Данные получены с сервера:\");\n                const data = JSON.parse(event.data);\n                console.log(\"Отчёт:\")\n                console.log(event)\n                if (data.handlerType === \"message\") {\n                    this.setState({\n                        msgList: this.state.msgList.concat(data.message)\n                    });\n                }\n            };\n            socket.onclose = function (event) {\n                console.info(\"[close] Соединение закрыто. Отчёт:\");\n                console.log(event);\n            };\n            socket.onerror = function (error) {\n                console.error(\"[error] Ошибка! Отчёт:\");\n                console.log(error);\n            };\n            this.cometCreated = true;\n        }\n    };\n    createCometConnection = () => {\n        let socket = new WebSocket(\"wss://\"+document.location.host);\n        socket.onopen = function (e) {\n            console.log(\"[open] Соединение установлено\");\n            // socket.send(\"Меня зовут Джон\");\n        };\n        socket.onmessage = (event) => {\n            console.log(`[message] Данные получены с сервера: ${event.data}`);\n            const data = JSON.parse(event.data);\n            if (data.handlerType === \"message\") {\n                this.setState({\n                    msgList: this.state.msgList.concat(data.message)\n                });\n            }\n        };\n        socket.onclose = function (event) {\n            if (event.wasClean) {\n                console.log(`[close] Соединение закрыто чисто, код=${event.code} причина=${event.reason}`);\n            } else {\n                console.log('[close] Соединение прервано');\n            }\n        };\n        socket.onerror = function (error) {\n            console.log(`[error] ${error.message}`);\n        };\n    };\n    render() {\n        const {msgList, ischatHistoryLoaded, usersList} = this.state;\n        return (\n            <div className=\"window-area\">\n                <ConversationList usersList={usersList}/>\n                <ChatArea msgList={msgList} isLoading={!ischatHistoryLoaded}/>\n                <RightTabs />\n            </div>\n        );\n    }\n}\nexport default WindowArea;\n","import React from 'react';\r\nfunction WindowTitle() {\r\n    return (\r\n        <div className=\"window-title\">\r\n            <div className=\"dots\">\r\n                <i className=\"fa fa-circle\"></i>\r\n                <i className=\"fa fa-circle\"></i>\r\n                <i className=\"fa fa-circle\"></i>\r\n            </div>\r\n            <div className=\"title\">\r\n                <span>Чат</span>\r\n            </div>\r\n            <div className=\"expand\">\r\n                <i className=\"fa fa-expand\"></i>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default WindowTitle;\r\n","import React, { Fragment } from 'react';\r\nimport WindowArea from \"./WindowArea\";\r\nimport WindowTitle from \"./WindowTitle\";\r\nfunction App() {\r\n    return (\r\n        <Fragment>\r\n            <WindowTitle />\r\n            <WindowArea />\r\n        </Fragment>\r\n    );\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport App from './components/App.js';\r\n\r\nrender(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}